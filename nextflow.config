includeConfig "config/utils.config"

params {
  accessions         = ""                       // CSV of accessions to download
  barcodes           = "data/barcodes.csv"      // CSV listing barcode files
  star_indices       = "data/star_indices.csv"  // CSV listing STAR indices
  output_dir         = "results"                // Output directory location
  max_samples        = 3                        // Max number of samples to process, if no accessions are provided
  max_accessions     = 1                        // Max number of accessions per sample to use for STAR parameter determination
  max_spots          = 1000000                  // Max number of spots (read-pairs) for STAR param assessment
  fallback_max_spots = 200000000                // Max number of spots (read-pairs) if fasterq-dump fails
  min_read_len       = 26                       // Minimum read length for R1 & R2 (shorter read files will be ignored)
  max_sra_size       = 300                      // Max SRA file size in GB (determined via sra-stat); all larger will be filtered
  organisms          = "human,mouse"            // Organisms to process if pulling from the scRecounter SQL database
  define             = false                    // Just define the STAR parameters for each sample
  fasterq_tmp        = "TEMP"                   // Temporary directory for fasterq-dump
  db_host            = "35.243.133.29"          // scRecounter SQL database host (GCP_SQL_DB_HOST)
  db_name            = "sragent-prod"           // scRecounter SQL database name (GCP_SQL_DB_NAME)
  db_username        = "postgres"               // scRecounter SQL database username (GCP_SQL_DB_USERNAME)
}

//-- Trace configuration --//
trace {
    enabled = true
    fields = 'task_id,hash,native_id,name,status,exit,submit,start,complete,duration,realtime,cpus,memory,disk,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vmem,rss,peak_vmem,peak_rss,vol_ctxt_swth,inv_ctxt_swth,tag,script'
}


//-- Extra configs --//
includeConfig "config/process.config"
includeConfig "config/profiles.config"

//-- Functions --//
// Remove trailing forward slashes in a string
def fmtPath(path_str) {
    return path_str.replaceAll(/\/+$/, '')
}

// Limit to the max resources of the available machine
def check_max(obj, type){
    if(type == 'memory'){
        if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1){
            return params.max_memory as nextflow.util.MemoryUnit
        }
    } else if(type == 'time'){
        if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1){
            return params.max_time as nextflow.util.Duration
        }
    } else if(type == 'cpus'){
        if (obj > params.max_cpus as int){
            return params.max_cpus as int
        }
    }
    return obj
}

def getWorkDir() {
    def userGroup = "id -gn".execute().text.trim()
    def userName = "whoami".execute().text.trim()
    def workDir = "/scratch/$userGroup/$userName/nextflow-work/scRecounter"
    return workDir
}

def getCondaCacheDir() {
    def userName = "whoami".execute().text.trim()
    cacheDir = "/home/$userName/nextflow/conda-cache/scRecounter"
    return cacheDir
}